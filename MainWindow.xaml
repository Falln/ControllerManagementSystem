<mde:MaterialWindow x:Class="ControllerManagementSystem.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ControllerManagementSystem"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
        xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
        Icon="/CMSFavicon.ico"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{materialDesign:MaterialDesignFont}"
        FontSize="14"
        mc:Ignorable="d"
        MouseDown="FocusGrid" Closing="MaterialWindow_Closed" 
        Title="ControllerManagementSystem" Height="300" Width="640" ResizeMode="CanResize">

    <mde:MaterialWindow.Resources>
        <!-- Default Colors -->
        <Color x:Key="BaseGray">#FF2A2A2A</Color>
        <Brush x:Key="BaseBackground">#FF2A2A2A</Brush>

        <Style TargetType="{x:Type Button}" x:Key="WindowButtons">
            <Setter Property="Background" Value="{StaticResource BaseBackground}"/>
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF525252"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>

    </mde:MaterialWindow.Resources>

    <mde:MaterialWindow.TitleTemplate>
        <DataTemplate>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource WindowTitleTextBlockStyle}" Text="{Binding Path=Title, RelativeSource={RelativeSource AncestorType={x:Type mde:MaterialWindow}}}" Margin="8,0,0,0" />
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Stretch"/>
            </Grid>
        </DataTemplate>
    </mde:MaterialWindow.TitleTemplate>

    <materialDesign:DialogHost x:Name="ColorDialog" IsOpen="False" DialogOpened="ColorDialog_DialogOpened">
        <materialDesign:DialogHost.DialogContent>
            <Grid Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Column="0" Grid.Row="0">
                    <TextBox x:Name="ColorPickerHexInput"
                             Text="{Binding Color, ElementName=ColorPicker, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource MaterialDesignFilledTextBox}"
                             materialDesign:HintAssist.Hint="Color HEX value"
                             DockPanel.Dock="Top" 
                             Margin="5,0,0,2" HorizontalAlignment="Left"
                             Width="130"/>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom"
                                Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Height="40">
                        <TextBlock Text="Light" VerticalAlignment="Center" Margin="0,6,0,0"/>
                        <ToggleButton x:Name="ModeTglBtn"
                                      Checked="ModeTglBtn_Checked"
                                      Unchecked="ModeTglBtn_Unchecked"
                                      Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                      Margin="10,6,10,0" VerticalAlignment="Center"
                                      Height="20"/>
                        <TextBlock Text="Dark" VerticalAlignment="Center" Margin="0,6,0,0"/>
                    </StackPanel>
                    <Rectangle x:Name="ColorDisplayRect"
                               Fill="{Binding Color,
                               ElementName=ColorPicker,
                               Converter={StaticResource ColorToBrushConverter}}"
                               Margin="5,0,0,2" HorizontalAlignment="Left"
                               Height="70" Width="130"/>

                </DockPanel>
                <materialDesign:ColorPicker x:Name="ColorPicker"
                                                    Grid.Column="1" Grid.Row="0"
                                                    Color="{Binding SelectedColor, Delay=25}"
                                                    Width="200" DockPanel.Dock="Right"/>
                <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                                    Grid.ColumnSpan="2" Grid.Row="1">
                    <Button x:Name="ApplyColorBtn"
                                        Content="Apply"
                                        Style="{DynamicResource MaterialDesignFlatButton}"
                                        Click="ApplyColorBtn_Click"
                                        Margin="0,0,35,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        Height="30" Width="116"/>
                    <Button x:Name="CancelColorBtn"
                                        Content="Cancel"
                                        Style="{DynamicResource MaterialDesignFlatButton}"
                                        Click="CancelColorBtn_Click"
                                        Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        Height="30" Width="116"/>
                </StackPanel>
            </Grid>
        </materialDesign:DialogHost.DialogContent>
        
        <Border BorderThickness="0">
            <Grid x:Name="Grid" Focusable="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="112.803"/>
                    <RowDefinition Height="42.214"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Window interaction buttons -->
                <!--
                <Button x:Name="minimizeBtn" Style="{StaticResource WindowButtons}" Grid.Column="5" Grid.Row="0" Click="minimizeBtn_Click">
                    <Image Source="/Images/subtract.png" />
                </Button>
                <Button x:Name="makeResizeBtn" Style="{StaticResource WindowButtons}" Grid.Column="6" Grid.Row="0" Click="makeResizeBtn_Click">
                    <Image Source="/Images/restore-down.png" />
                </Button>
                <Button x:Name="closeBtn" Style="{StaticResource WindowButtons}" Grid.Column="7" Grid.Row="0" Click="closeBtn_Click">
                    <Image Source="/Images/close.png" />
                </Button>
                -->

                <TextBox x:Name="UsernameCheckoutBox" 
                        materialDesign:HintAssist.Hint="Name/Tag" 
                        materialDesign:HintAssist.IsFloating="True"
                        ToolTip="Person checking the controller out" 
                        TextWrapping="Wrap" 
                        Grid.Column="0" Grid.Row="1" Margin="20,0,0,0" VerticalAlignment="Center"
                        Width="120"/>
                <!-- <Label Content="Type" Grid.Column="1" Grid.Row="0" Margin="5,0,0,3" VerticalAlignment="Bottom"/> -->
                <ComboBox x:Name="ControllerTypeBox"
                          SelectionChanged="ControllerTypeBox_SelectionChanged"
                          DropDownClosed="FocusGrid"
                          materialDesign:HintAssist.Hint="Type" 
                          materialDesign:HintAssist.IsFloating="True"
                          HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"
                          Grid.Column="1" Grid.Row="1" Margin="10,0,0,0"
                          Width="110"/>
                <!-- <Label Content="Controller Name" Grid.Column="2" Grid.Row="0" Margin="5,0,0,3" VerticalAlignment="Bottom"/> -->
                <ComboBox x:Name="ControllerNumberBox" 
                          materialDesign:HintAssist.Hint="Name" 
                          materialDesign:HintAssist.IsFloating="True"
                          SelectionChanged="ControllerNumberBox_SelectionChanged"
                          DropDownClosed="FocusGrid"
                          HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"
                          Grid.Column="2" Grid.Row="1" Margin="10,0,0,0"
                          Width="140"/>
                <TextBox x:Name="InitialsBox" 
                         materialDesign:HintAssist.Hint="Initials" 
                         materialDesign:HintAssist.IsFloating="True"
                         ToolTip="Employee Initials" 
                         Grid.Column="3" Grid.Row="1" Margin="10,0,0,0" VerticalAlignment="Center"
                         Width="50"/>
                <StackPanel Grid.Column="4" Grid.Row="0" Grid.RowSpan="4" Margin="10,21,0,0">
                    <Button x:Name="CheckoutBtn" 
                            Content="Checkout" 
                            Click="CheckoutBtn_Click"
                            Width="91" Height="29"/>
                    <Button x:Name="CheckinBtn" 
                            Content="Check-in" 
                            Click="CheckinBtn_Click" 
                            Width="91" Height="29" Margin="0,5,0,0"/>
                </StackPanel>

                <TextBlock Text="Quick Item Info"
                           Grid.Row="2" Grid.Column="0" Margin="20,20,60,52" Grid.ColumnSpan="2"/>
                <StackPanel x:Name="ControllerReadout" Grid.Row="2" Grid.Column="0" Margin="20,50,10,21" Grid.RowSpan="2">
                    <TextBlock x:Name="TestName" materialDesign:HintAssist.Hint="Item Name"/>
                    <TextBlock x:Name="TestType" materialDesign:HintAssist.Hint="Item Type"/>
                    <TextBlock x:Name="TestCheckedout" materialDesign:HintAssist.Hint="CheckedOut?"/>
                    <TextBlock x:Name="TestStatus" materialDesign:HintAssist.Hint="Controller Condition"/>
                    <TextBlock x:Name="TestOwner" materialDesign:HintAssist.Hint="Owner"/>
                </StackPanel>


                <materialDesign:PopupBox Style="{DynamicResource MaterialDesignFloatingActionButtonPopupBox}" 
                                         PlacementMode="LeftAndAlignTopEdges"
                                         Foreground="Black"
                                         StaysOpen="True"
                                         Margin="0,0,0,0" HorizontalAlignment="Right"
                                         Grid.Column="7" Grid.Row="0" Grid.RowSpan="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel Margin="5,0,5,0">
                            <TextBox x:Name="TotalEntriesBlock"
                                     PreviewTextInput="TotalEntriesBlock_PreviewTextInput"
                                     TextChanged="TotalEntriesBlock_TextChanged"
                                     materialDesign:HintAssist.Hint="Entries" 
                                     materialDesign:HintAssist.HelperText="# of entries to save"
                                     ToolTip="Total number of entries to save per controller"
                                     Margin="0,0,0,0" HorizontalAlignment="Center"
                                     Width="100"/>
                            <TextBox x:Name="DefaultOwnerBlock"
                                     TextChanged="DefaultOwnerBlock_TextChanged"
                                     FontStyle="Italic"
                                     materialDesign:HintAssist.Hint="No Owner"
                                     materialDesign:HintAssist.HelperText="Default owner"
                                     ToolTip="Who you want to own the controller when it is checked in"
                                     Margin="0,20,0,20" HorizontalAlignment="Center"
                                     Width="100"/>
                            <Button Content="Add Item"
                                    Style="{DynamicResource MaterialDesignRaisedButton}"
                                    Click="AddItemBtn_Click"
                                    ToolTip="Add a Controller to the System"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                    Height="30" Width="116"/>
                            <Button Content="Remove Item"
                                    Style="{DynamicResource MaterialDesignRaisedButton}"
                                    Click="RemoveItemBtn_Click"
                                    ToolTip="Remove a Controller from the System"
                                    Margin="0,5,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                    HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                    Height="30" Width="116"/>
                            <Button Click="OpenColorDialogBtn_Click"
                                    Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                                    ToolTip="Change the theme of the app"
                                    Margin="0,5,0,0" HorizontalAlignment="Center"
                                    Command="{x:Static materialDesign:PopupBox.ClosePopupCommand}"
                                    Height="30" Width="30">
                                <materialDesign:PackIcon Kind="PaletteOutline" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </materialDesign:PopupBox>
                <ComboBox x:Name="ItemHistTypeBox"
                    SelectionChanged="ItemHistTypeBox_SelectionChanged"
                    DropDownClosed="FocusGrid"
                    materialDesign:HintAssist.Hint="Type" 
                    materialDesign:HintAssist.IsFloating="True"
                    HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"
                    HorizontalAlignment="Left" VerticalAlignment="Bottom"
                    Grid.Column="2" Grid.Row="2"
                    Width="110"/>
                <ComboBox x:Name="ItemHistNameBox" 
                    materialDesign:HintAssist.Hint="Name" 
                    materialDesign:HintAssist.IsFloating="True"
                    SelectionChanged="ItemHistNameBox_SelectionChanged"
                    DropDownClosed="FocusGrid"
                    HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"
                    Grid.Column="2" Grid.Row="2" Margin="120,0,0,0"
                    Width="140" Grid.ColumnSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>

                <materialDesign:PopupBox x:Name="CheckHistPopupBox"
                                         Content="Check History" 
                                         PlacementMode="TopAndAlignCentres"
                                         materialDesign:RippleAssist.IsDisabled="True"
                                         Margin="55,0,0,0" VerticalAlignment="Center"
                                         Grid.Column="2" Grid.Row="3" Grid.ColumnSpan="2">
                    <materialDesign:PopupBox.ToggleContent>
                        <Button x:Name="CheckHistInsideBtn" Content="Check History" IsEnabled="True" materialDesign:RippleAssist.IsDisabled="False" Click="CheckHistInsideBtn_Click"/>
                    </materialDesign:PopupBox.ToggleContent>

                    <DataGrid AutoGenerateColumns="False" IsReadOnly="True"
                              FontSize="11"
                              BorderThickness="0"
                              Margin="0"
                              MaxHeight="250">
                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Header="Date/Time"
                                                               Binding="{Binding dateTime}"
                                                               SortDirection="Descending"/>
                            <materialDesign:DataGridTextColumn Header="Condition"
                                                               Binding="{Binding condition}"/>
                            <materialDesign:DataGridTextColumn Header="Checked Status"
                                                               Binding="{Binding checkedStatus}"/>
                            <materialDesign:DataGridTextColumn Header="Owner"
                                                               Binding="{Binding currentOwner}"/>
                            <materialDesign:DataGridTextColumn Header="Initials"
                                                               Binding="{Binding initials}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </materialDesign:PopupBox>
            </Grid>
        </Border>
    </materialDesign:DialogHost>
</mde:MaterialWindow>
